"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/documents/[id]/process/route";
exports.ids = ["app/api/documents/[id]/process/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "dns":
/*!**********************!*\
  !*** external "dns" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("dns");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "worker_threads":
/*!*********************************!*\
  !*** external "worker_threads" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("worker_threads");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:buffer":
/*!******************************!*\
  !*** external "node:buffer" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:buffer");

/***/ }),

/***/ "node:fs":
/*!**************************!*\
  !*** external "node:fs" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("node:fs");

/***/ }),

/***/ "node:http":
/*!****************************!*\
  !*** external "node:http" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:http");

/***/ }),

/***/ "node:https":
/*!*****************************!*\
  !*** external "node:https" ***!
  \*****************************/
/***/ ((module) => {

module.exports = require("node:https");

/***/ }),

/***/ "node:net":
/*!***************************!*\
  !*** external "node:net" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:net");

/***/ }),

/***/ "node:path":
/*!****************************!*\
  !*** external "node:path" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:path");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:stream");

/***/ }),

/***/ "node:stream/web":
/*!**********************************!*\
  !*** external "node:stream/web" ***!
  \**********************************/
/***/ ((module) => {

module.exports = require("node:stream/web");

/***/ }),

/***/ "node:url":
/*!***************************!*\
  !*** external "node:url" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("node:url");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "node:zlib":
/*!****************************!*\
  !*** external "node:zlib" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:zlib");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&page=%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute.ts&appDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&page=%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute.ts&appDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_kiran_taxgrok_tax_filing_app_app_app_api_documents_id_process_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/documents/[id]/process/route.ts */ \"(rsc)/./app/api/documents/[id]/process/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/documents/[id]/process/route\",\n        pathname: \"/api/documents/[id]/process\",\n        filename: \"route\",\n        bundlePath: \"app/api/documents/[id]/process/route\"\n    },\n    resolvedPagePath: \"C:\\\\kiran\\\\taxgrok\\\\tax_filing_app\\\\app\\\\app\\\\api\\\\documents\\\\[id]\\\\process\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_kiran_taxgrok_tax_filing_app_app_app_api_documents_id_process_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/documents/[id]/process/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZkb2N1bWVudHMlMkYlNUJpZCU1RCUyRnByb2Nlc3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmRvY3VtZW50cyUyRiU1QmlkJTVEJTJGcHJvY2VzcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmRvY3VtZW50cyUyRiU1QmlkJTVEJTJGcHJvY2VzcyUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDa2lyYW4lNUN0YXhncm9rJTVDdGF4X2ZpbGluZ19hcHAlNUNhcHAlNUNhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPUMlM0ElNUNraXJhbiU1Q3RheGdyb2slNUN0YXhfZmlsaW5nX2FwcCU1Q2FwcCZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDcUM7QUFDbEg7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hcHAvP2ZlMDkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxca2lyYW5cXFxcdGF4Z3Jva1xcXFx0YXhfZmlsaW5nX2FwcFxcXFxhcHBcXFxcYXBwXFxcXGFwaVxcXFxkb2N1bWVudHNcXFxcW2lkXVxcXFxwcm9jZXNzXFxcXHJvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9kb2N1bWVudHMvW2lkXS9wcm9jZXNzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvZG9jdW1lbnRzL1tpZF0vcHJvY2Vzc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZG9jdW1lbnRzL1tpZF0vcHJvY2Vzcy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXGtpcmFuXFxcXHRheGdyb2tcXFxcdGF4X2ZpbGluZ19hcHBcXFxcYXBwXFxcXGFwcFxcXFxhcGlcXFxcZG9jdW1lbnRzXFxcXFtpZF1cXFxccHJvY2Vzc1xcXFxyb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvZG9jdW1lbnRzL1tpZF0vcHJvY2Vzcy9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&page=%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute.ts&appDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/documents/[id]/process/route.ts":
/*!*************************************************!*\
  !*** ./app/api/documents/[id]/process/route.ts ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   dynamic: () => (/* binding */ dynamic)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth */ \"(rsc)/./node_modules/next-auth/index.js\");\n/* harmony import */ var next_auth__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(next_auth__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_db__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/db */ \"(rsc)/./lib/db.ts\");\n/* harmony import */ var _lib_document_ai_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/document-ai-service */ \"(rsc)/./lib/document-ai-service.ts\");\n\n\n\n\nconst dynamic = \"force-dynamic\";\nasync function POST(request, { params }) {\n    try {\n        const session = await (0,next_auth__WEBPACK_IMPORTED_MODULE_1__.getServerSession)();\n        if (!session?.user?.email) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Unauthorized\"\n            }, {\n                status: 401\n            });\n        }\n        const user = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.user.findUnique({\n            where: {\n                email: session.user.email\n            }\n        });\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User not found\"\n            }, {\n                status: 404\n            });\n        }\n        const document = await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.document.findFirst({\n            where: {\n                id: params.id,\n                taxReturn: {\n                    userId: user.id\n                }\n            }\n        });\n        if (!document) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Document not found\"\n            }, {\n                status: 404\n            });\n        }\n        // Update status to processing\n        await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.document.update({\n            where: {\n                id: params.id\n            },\n            data: {\n                processingStatus: \"PROCESSING\"\n            }\n        });\n        // Check if Google Document AI is configured\n        const useDocumentAI = process.env.GOOGLE_CLOUD_PROJECT_ID && process.env.GOOGLE_CLOUD_W2_PROCESSOR_ID && process.env.GOOGLE_APPLICATION_CREDENTIALS;\n        let extractedTaxData;\n        if (useDocumentAI) {\n            // Use Google Document AI\n            try {\n                const config = (0,_lib_document_ai_service__WEBPACK_IMPORTED_MODULE_3__.createDocumentAIConfig)();\n                const documentAI = new _lib_document_ai_service__WEBPACK_IMPORTED_MODULE_3__.DocumentAIService(config);\n                extractedTaxData = await documentAI.processDocument(document.filePath, document.documentType);\n            } catch (docAIError) {\n                console.error(\"Document AI processing failed, falling back to LLM:\", docAIError);\n                // Fall back to LLM processing\n                extractedTaxData = await processWithLLM(document);\n            }\n        } else {\n            // Fall back to LLM processing\n            console.log(\"Google Document AI not configured, using LLM fallback\");\n            extractedTaxData = await processWithLLM(document);\n        }\n        // Create streaming response to maintain frontend compatibility\n        const encoder = new TextEncoder();\n        const readable = new ReadableStream({\n            async start (controller) {\n                try {\n                    // Simulate streaming by sending the complete response in chunks\n                    const jsonResponse = JSON.stringify({\n                        documentType: extractedTaxData.documentType,\n                        ocrText: extractedTaxData.ocrText,\n                        extractedData: extractedTaxData.extractedData\n                    });\n                    // Send response in chunks to simulate streaming\n                    const chunkSize = 100;\n                    for(let i = 0; i < jsonResponse.length; i += chunkSize){\n                        const chunk = jsonResponse.slice(i, i + chunkSize);\n                        controller.enqueue(encoder.encode(`data: ${JSON.stringify({\n                            content: chunk\n                        })}\\n\\n`));\n                        // Small delay to simulate processing time\n                        await new Promise((resolve)=>setTimeout(resolve, 50));\n                    }\n                    // Save OCR text and extracted data to database\n                    await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.document.update({\n                        where: {\n                            id: params.id\n                        },\n                        data: {\n                            ocrText: extractedTaxData.ocrText,\n                            extractedData: {\n                                documentType: extractedTaxData.documentType,\n                                ocrText: extractedTaxData.ocrText,\n                                extractedData: extractedTaxData.extractedData,\n                                confidence: extractedTaxData.confidence\n                            },\n                            processingStatus: \"COMPLETED\"\n                        }\n                    });\n                    controller.enqueue(encoder.encode(\"data: [DONE]\\n\\n\"));\n                    controller.close();\n                } catch (error) {\n                    console.error(\"Error in streaming response:\", error);\n                    await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.document.update({\n                        where: {\n                            id: params.id\n                        },\n                        data: {\n                            processingStatus: \"FAILED\"\n                        }\n                    });\n                    controller.error(error);\n                }\n            }\n        });\n        return new Response(readable, {\n            headers: {\n                \"Content-Type\": \"text/plain; charset=utf-8\",\n                \"Cache-Control\": \"no-cache\"\n            }\n        });\n    } catch (error) {\n        console.error(\"Document processing error:\", error);\n        // Update document status to failed\n        await _lib_db__WEBPACK_IMPORTED_MODULE_2__.prisma.document.update({\n            where: {\n                id: params.id\n            },\n            data: {\n                processingStatus: \"FAILED\"\n            }\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Fallback LLM processing function\nasync function processWithLLM(document) {\n    const { readFile } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs/promises */ \"fs/promises\", 23));\n    // Read the file and convert to base64\n    const fileBuffer = await readFile(document.filePath);\n    const base64String = fileBuffer.toString(\"base64\");\n    // Prepare the message for the LLM API\n    const messages = [\n        {\n            role: \"user\",\n            content: [\n                {\n                    type: \"file\",\n                    file: {\n                        filename: document.fileName,\n                        file_data: `data:${document.fileType};base64,${base64String}`\n                    }\n                },\n                {\n                    type: \"text\",\n                    text: getExtractionPrompt(document.documentType)\n                }\n            ]\n        }\n    ];\n    // Call the LLM API for document processing\n    const response = await fetch(\"https://apps.abacus.ai/v1/chat/completions\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"Authorization\": `Bearer ${process.env.ABACUSAI_API_KEY}`\n        },\n        body: JSON.stringify({\n            model: \"gpt-4.1-mini\",\n            messages: messages,\n            stream: false,\n            max_tokens: 3000,\n            response_format: {\n                type: \"json_object\"\n            }\n        })\n    });\n    if (!response.ok) {\n        throw new Error(`LLM API error: ${response.status}`);\n    }\n    const result = await response.json();\n    const content = result.choices[0]?.message?.content;\n    if (!content) {\n        throw new Error(\"No content returned from LLM API\");\n    }\n    const parsedContent = JSON.parse(content);\n    return {\n        documentType: parsedContent.documentType || document.documentType,\n        ocrText: parsedContent.ocrText || \"\",\n        extractedData: parsedContent.extractedData || parsedContent,\n        confidence: 0.85 // Default confidence for LLM\n    };\n}\nfunction getExtractionPrompt(documentType) {\n    const basePrompt = `Please extract all tax-related information from this document and return it in JSON format. Focus on extracting data that would be useful for tax filing purposes.\n\nPlease respond in JSON format with the following structure:\n{\n  \"documentType\": \"W2\" | \"FORM_1099_INT\" | \"FORM_1099_DIV\" | \"FORM_1099_MISC\" | \"FORM_1099_NEC\" | \"FORM_1099_R\" | \"FORM_1099_G\" | \"OTHER_TAX_DOCUMENT\",\n  \"ocrText\": \"Full OCR text from the document\",\n  \"extractedData\": {\n    // Document-specific fields based on document type\n  }\n}\n\n`;\n    switch(documentType){\n        case \"W2\":\n            return basePrompt + `For W-2 forms, extract:\n{\n  \"documentType\": \"W2\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"employerName\": \"Employer name\",\n    \"employerEIN\": \"Employer EIN (XX-XXXXXXX format)\",\n    \"employerAddress\": \"Employer address\",\n    \"employeeName\": \"Employee name\",\n    \"employeeSSN\": \"Employee SSN\",\n    \"employeeAddress\": \"Employee address\",\n    \"wages\": \"Box 1 - Wages, tips, other compensation\",\n    \"federalTaxWithheld\": \"Box 2 - Federal income tax withheld\",\n    \"socialSecurityWages\": \"Box 3 - Social security wages\",\n    \"socialSecurityTaxWithheld\": \"Box 4 - Social security tax withheld\",\n    \"medicareWages\": \"Box 5 - Medicare wages and tips\",\n    \"medicareTaxWithheld\": \"Box 6 - Medicare tax withheld\",\n    \"socialSecurityTips\": \"Box 7 - Social security tips\",\n    \"allocatedTips\": \"Box 8 - Allocated tips\",\n    \"stateWages\": \"Box 16 - State wages, tips, etc.\",\n    \"stateTaxWithheld\": \"Box 17 - State income tax\",\n    \"localWages\": \"Box 18 - Local wages, tips, etc.\",\n    \"localTaxWithheld\": \"Box 19 - Local income tax\"\n  }\n}`;\n        case \"FORM_1099_INT\":\n            return basePrompt + `For 1099-INT forms, extract:\n{\n  \"documentType\": \"FORM_1099_INT\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"payerName\": \"Payer name\",\n    \"payerTIN\": \"Payer TIN\",\n    \"payerAddress\": \"Payer address\",\n    \"recipientName\": \"Recipient name\",\n    \"recipientTIN\": \"Recipient TIN\",\n    \"recipientAddress\": \"Recipient address\",\n    \"interestIncome\": \"Box 1 - Interest income\",\n    \"earlyWithdrawalPenalty\": \"Box 2 - Early withdrawal penalty\",\n    \"interestOnUSavingsBonds\": \"Box 3 - Interest on U.S. Savings Bonds\",\n    \"federalTaxWithheld\": \"Box 4 - Federal income tax withheld\",\n    \"investmentExpenses\": \"Box 5 - Investment expenses\",\n    \"foreignTaxPaid\": \"Box 6 - Foreign tax paid\",\n    \"foreignCountry\": \"Box 7 - Foreign country\",\n    \"taxExemptInterest\": \"Box 8 - Tax-exempt interest\",\n    \"privateActivityBondInterest\": \"Box 9 - Specified private activity bond interest\",\n    \"marketDiscount\": \"Box 10 - Market discount\",\n    \"bondPremium\": \"Box 11 - Bond premium\",\n    \"bondPremiumOnTaxExemptBond\": \"Box 12 - Bond premium on tax-exempt bond\",\n    \"stateCode\": \"Box 13 - State code\",\n    \"stateTaxWithheld\": \"Box 14 - State income tax withheld\",\n    \"stateIdNumber\": \"Box 15 - State/Payer's state no.\"\n  }\n}`;\n        case \"FORM_1099_DIV\":\n            return basePrompt + `For 1099-DIV forms, extract:\n{\n  \"documentType\": \"FORM_1099_DIV\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"payerName\": \"Payer name\",\n    \"payerTIN\": \"Payer TIN\",\n    \"payerAddress\": \"Payer address\",\n    \"recipientName\": \"Recipient name\",\n    \"recipientTIN\": \"Recipient TIN\",\n    \"recipientAddress\": \"Recipient address\",\n    \"ordinaryDividends\": \"Box 1a - Ordinary dividends\",\n    \"qualifiedDividends\": \"Box 1b - Qualified dividends\",\n    \"totalCapitalGain\": \"Box 2a - Total capital gain distributions\",\n    \"unrecaptured1250Gain\": \"Box 2b - Unrecap. Sec. 1250 gain\",\n    \"section1202Gain\": \"Box 2c - Section 1202 gain\",\n    \"collectiblesGain\": \"Box 2d - Collectibles (28%) gain\",\n    \"nondividendDistributions\": \"Box 3 - Nondividend distributions\",\n    \"federalTaxWithheld\": \"Box 4 - Federal income tax withheld\",\n    \"section199ADividends\": \"Box 5 - Section 199A dividends\",\n    \"investmentExpenses\": \"Box 6 - Investment expenses\",\n    \"foreignTaxPaid\": \"Box 7 - Foreign tax paid\",\n    \"foreignCountry\": \"Box 8 - Foreign country\",\n    \"cashLiquidation\": \"Box 9 - Cash liquidation distributions\",\n    \"noncashLiquidation\": \"Box 10 - Noncash liquidation distributions\",\n    \"stateCode\": \"Box 11 - State code\",\n    \"stateTaxWithheld\": \"Box 12 - State income tax withheld\",\n    \"stateIdNumber\": \"Box 13 - State/Payer's state no.\"\n  }\n}`;\n        case \"FORM_1099_MISC\":\n            return basePrompt + `For 1099-MISC forms, extract:\n{\n  \"documentType\": \"FORM_1099_MISC\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"payerName\": \"Payer name\",\n    \"payerTIN\": \"Payer TIN\",\n    \"payerAddress\": \"Payer address\",\n    \"recipientName\": \"Recipient name\",\n    \"recipientTIN\": \"Recipient TIN\",\n    \"recipientAddress\": \"Recipient address\",\n    \"rents\": \"Box 1 - Rents\",\n    \"royalties\": \"Box 2 - Royalties\",\n    \"otherIncome\": \"Box 3 - Other income\",\n    \"federalTaxWithheld\": \"Box 4 - Federal income tax withheld\",\n    \"fishingBoatProceeds\": \"Box 5 - Fishing boat proceeds\",\n    \"medicalHealthPayments\": \"Box 6 - Medical and health care payments\",\n    \"nonemployeeCompensation\": \"Box 7 - Nonemployee compensation\",\n    \"substitutePayments\": \"Box 8 - Substitute payments in lieu of dividends\",\n    \"cropInsuranceProceeds\": \"Box 9 - Crop insurance proceeds\",\n    \"grossProceeds\": \"Box 10 - Gross proceeds paid to an attorney\",\n    \"section409ADeferrals\": \"Box 11 - Section 409A deferrals\",\n    \"section409AIncome\": \"Box 12 - Section 409A income\",\n    \"excessGoldenParachute\": \"Box 13 - Excess golden parachute payments\",\n    \"nonqualifiedDeferredCompensation\": \"Box 14 - Nonqualified deferred compensation\",\n    \"stateCode\": \"Box 15 - State code\",\n    \"stateTaxWithheld\": \"Box 16 - State income tax withheld\",\n    \"stateIdNumber\": \"Box 17 - State/Payer's state no.\"\n  }\n}`;\n        case \"FORM_1099_NEC\":\n            return basePrompt + `For 1099-NEC forms, extract:\n{\n  \"documentType\": \"FORM_1099_NEC\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"payerName\": \"Payer name\",\n    \"payerTIN\": \"Payer TIN\",\n    \"payerAddress\": \"Payer address\",\n    \"recipientName\": \"Recipient name\",\n    \"recipientTIN\": \"Recipient TIN\",\n    \"recipientAddress\": \"Recipient address\",\n    \"nonemployeeCompensation\": \"Box 1 - Nonemployee compensation\",\n    \"federalTaxWithheld\": \"Box 4 - Federal income tax withheld\",\n    \"stateCode\": \"Box 5 - State code\",\n    \"stateTaxWithheld\": \"Box 6 - State income tax withheld\",\n    \"stateIdNumber\": \"Box 7 - State/Payer's state no.\"\n  }\n}`;\n        default:\n            return basePrompt + `For other tax documents, extract relevant information including:\n{\n  \"documentType\": \"OTHER_TAX_DOCUMENT\",\n  \"ocrText\": \"Full OCR text\",\n  \"extractedData\": {\n    \"payerName\": \"Payer/Employer name if applicable\",\n    \"payerTIN\": \"Payer/Employer TIN if applicable\",\n    \"recipientName\": \"Recipient/Employee name if applicable\",\n    \"recipientTIN\": \"Recipient/Employee TIN if applicable\",\n    \"incomeAmount\": \"Any income amounts\",\n    \"taxWithheld\": \"Any tax withheld amounts\",\n    \"relevantBoxes\": \"Any other relevant tax information\"\n  }\n}\n\nRespond with raw JSON only. Do not include code blocks, markdown, or any other formatting.`;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/documents/[id]/process/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/db.ts":
/*!*******************!*\
  !*** ./lib/db.ts ***!
  \*******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma ?? new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBRTdDLE1BQU1DLGtCQUFrQkM7QUFJakIsTUFBTUMsU0FBU0YsZ0JBQWdCRSxNQUFNLElBQUksSUFBSUgsd0RBQVlBLEdBQUU7QUFFbEUsSUFBSUksSUFBeUIsRUFBY0gsZ0JBQWdCRSxNQUFNLEdBQUdBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYXBwLy4vbGliL2RiLnRzPzFkZjAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbFRoaXMgYXMgdW5rbm93biBhcyB7XG4gIHByaXNtYTogUHJpc21hQ2xpZW50IHwgdW5kZWZpbmVkXG59XG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID8/IG5ldyBQcmlzbWFDbGllbnQoKVxuXG5pZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09ICdwcm9kdWN0aW9uJykgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSA9IHByaXNtYVxuIl0sIm5hbWVzIjpbIlByaXNtYUNsaWVudCIsImdsb2JhbEZvclByaXNtYSIsImdsb2JhbFRoaXMiLCJwcmlzbWEiLCJwcm9jZXNzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./lib/db.ts\n");

/***/ }),

/***/ "(rsc)/./lib/document-ai-service.ts":
/*!************************************!*\
  !*** ./lib/document-ai-service.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DocumentAIService: () => (/* binding */ DocumentAIService),\n/* harmony export */   createDocumentAIConfig: () => (/* binding */ createDocumentAIConfig)\n/* harmony export */ });\n/* harmony import */ var _google_cloud_documentai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google-cloud/documentai */ \"(rsc)/./node_modules/@google-cloud/documentai/build/src/index.js\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n\n\nclass DocumentAIService {\n    constructor(config){\n        this.config = config;\n        // Initialize the client - will use GOOGLE_APPLICATION_CREDENTIALS env var\n        this.client = new _google_cloud_documentai__WEBPACK_IMPORTED_MODULE_0__.DocumentProcessorServiceClient({\n            // Use regional endpoint if not US\n            ...config.location !== \"us\" && {\n                apiEndpoint: `${config.location}-documentai.googleapis.com`\n            }\n        });\n    }\n    async processDocument(filePath, documentType) {\n        try {\n            const processorName = this.getProcessorName(documentType);\n            // Read and encode the document\n            const imageFile = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.readFile)(filePath);\n            const encodedImage = Buffer.from(imageFile).toString(\"base64\");\n            const request = {\n                name: processorName,\n                rawDocument: {\n                    content: encodedImage,\n                    mimeType: this.getMimeType(filePath)\n                }\n            };\n            // Process the document\n            const [result] = await this.client.processDocument(request);\n            if (!result.document) {\n                throw new Error(\"No document returned from processing\");\n            }\n            return this.transformToTaxData(result.document, documentType);\n        } catch (error) {\n            console.error(\"Error processing document with Document AI:\", error);\n            throw error;\n        }\n    }\n    getProcessorName(documentType) {\n        const { projectId, location } = this.config;\n        switch(documentType){\n            case \"W2\":\n                return `projects/${projectId}/locations/${location}/processors/${this.config.w2ProcessorId}`;\n            case \"FORM_1099_INT\":\n            case \"FORM_1099_DIV\":\n            case \"FORM_1099_MISC\":\n            case \"FORM_1099_NEC\":\n            case \"FORM_1099_R\":\n            case \"FORM_1099_G\":\n                if (!this.config.form1099ProcessorId) {\n                    throw new Error(`No 1099 processor configured for ${documentType}`);\n                }\n                return `projects/${projectId}/locations/${location}/processors/${this.config.form1099ProcessorId}`;\n            default:\n                // Fallback to W2 processor for unknown types\n                return `projects/${projectId}/locations/${location}/processors/${this.config.w2ProcessorId}`;\n        }\n    }\n    getMimeType(filePath) {\n        const extension = filePath.toLowerCase().split(\".\").pop();\n        switch(extension){\n            case \"pdf\":\n                return \"application/pdf\";\n            case \"png\":\n                return \"image/png\";\n            case \"jpg\":\n            case \"jpeg\":\n                return \"image/jpeg\";\n            case \"tiff\":\n            case \"tif\":\n                return \"image/tiff\";\n            default:\n                return \"application/pdf\";\n        }\n    }\n    transformToTaxData(document, documentType) {\n        const fullText = document.text || \"\";\n        let extractedData = {};\n        let averageConfidence = 0;\n        // Extract form fields and entities based on document type\n        switch(documentType){\n            case \"W2\":\n                extractedData = this.extractW2Data(document);\n                break;\n            case \"FORM_1099_INT\":\n                extractedData = this.extract1099IntData(document);\n                break;\n            case \"FORM_1099_DIV\":\n                extractedData = this.extract1099DivData(document);\n                break;\n            case \"FORM_1099_MISC\":\n                extractedData = this.extract1099MiscData(document);\n                break;\n            case \"FORM_1099_NEC\":\n                extractedData = this.extract1099NecData(document);\n                break;\n            default:\n                extractedData = this.extractGenericTaxData(document);\n        }\n        // Calculate average confidence\n        averageConfidence = this.calculateAverageConfidence(document);\n        return {\n            documentType,\n            ocrText: fullText,\n            extractedData,\n            confidence: averageConfidence\n        };\n    }\n    extractW2Data(document) {\n        const w2Data = {\n            employerName: \"\",\n            employerEIN: \"\",\n            employerAddress: \"\",\n            employeeName: \"\",\n            employeeSSN: \"\",\n            employeeAddress: \"\",\n            wages: \"\",\n            federalTaxWithheld: \"\",\n            socialSecurityWages: \"\",\n            socialSecurityTaxWithheld: \"\",\n            medicareWages: \"\",\n            medicareTaxWithheld: \"\",\n            socialSecurityTips: \"\",\n            allocatedTips: \"\",\n            stateWages: \"\",\n            stateTaxWithheld: \"\",\n            localWages: \"\",\n            localTaxWithheld: \"\"\n        };\n        // Extract from entities (specialized W-2 processor)\n        if (document.entities) {\n            document.entities.forEach((entity)=>{\n                const value = this.getText(entity.textAnchor, document.text);\n                switch(entity.type){\n                    case \"employee_name\":\n                        w2Data.employeeName = value;\n                        break;\n                    case \"employee_ssn\":\n                        w2Data.employeeSSN = value;\n                        break;\n                    case \"employer_name\":\n                        w2Data.employerName = value;\n                        break;\n                    case \"employer_ein\":\n                        w2Data.employerEIN = value;\n                        break;\n                    case \"wages_tips_other_compensation\":\n                        w2Data.wages = value;\n                        break;\n                    case \"federal_income_tax_withheld\":\n                        w2Data.federalTaxWithheld = value;\n                        break;\n                    case \"social_security_wages\":\n                        w2Data.socialSecurityWages = value;\n                        break;\n                    case \"social_security_tax_withheld\":\n                        w2Data.socialSecurityTaxWithheld = value;\n                        break;\n                    case \"medicare_wages_and_tips\":\n                        w2Data.medicareWages = value;\n                        break;\n                    case \"medicare_tax_withheld\":\n                        w2Data.medicareTaxWithheld = value;\n                        break;\n                }\n            });\n        }\n        // Extract from form fields as fallback\n        if (document.pages && document.pages[0]?.formFields) {\n            document.pages[0].formFields.forEach((field)=>{\n                if (!field.fieldName?.textAnchor || !field.fieldValue?.textAnchor) return;\n                const fieldName = this.getText(field.fieldName.textAnchor, document.text).toLowerCase();\n                const fieldValue = this.getText(field.fieldValue.textAnchor, document.text);\n                if (fieldName.includes(\"wages\") && fieldName.includes(\"tips\")) {\n                    w2Data.wages = fieldValue;\n                } else if (fieldName.includes(\"federal\") && fieldName.includes(\"tax\")) {\n                    w2Data.federalTaxWithheld = fieldValue;\n                } else if (fieldName.includes(\"social security\") && fieldName.includes(\"wages\")) {\n                    w2Data.socialSecurityWages = fieldValue;\n                } else if (fieldName.includes(\"medicare\") && fieldName.includes(\"wages\")) {\n                    w2Data.medicareWages = fieldValue;\n                }\n            // Add more field mappings as needed\n            });\n        }\n        return w2Data;\n    }\n    extract1099IntData(document) {\n        const data1099Int = {\n            payerName: \"\",\n            payerTIN: \"\",\n            payerAddress: \"\",\n            recipientName: \"\",\n            recipientTIN: \"\",\n            recipientAddress: \"\",\n            interestIncome: \"\",\n            earlyWithdrawalPenalty: \"\",\n            interestOnUSavingsBonds: \"\",\n            federalTaxWithheld: \"\",\n            investmentExpenses: \"\",\n            foreignTaxPaid: \"\",\n            foreignCountry: \"\",\n            taxExemptInterest: \"\",\n            privateActivityBondInterest: \"\",\n            marketDiscount: \"\",\n            bondPremium: \"\",\n            bondPremiumOnTaxExemptBond: \"\",\n            stateCode: \"\",\n            stateTaxWithheld: \"\",\n            stateIdNumber: \"\"\n        };\n        // Extract from form fields or entities\n        this.extractGenericFormFields(document, data1099Int);\n        return data1099Int;\n    }\n    extract1099DivData(document) {\n        const data1099Div = {\n            payerName: \"\",\n            payerTIN: \"\",\n            payerAddress: \"\",\n            recipientName: \"\",\n            recipientTIN: \"\",\n            recipientAddress: \"\",\n            ordinaryDividends: \"\",\n            qualifiedDividends: \"\",\n            totalCapitalGain: \"\",\n            unrecaptured1250Gain: \"\",\n            section1202Gain: \"\",\n            collectiblesGain: \"\",\n            nondividendDistributions: \"\",\n            federalTaxWithheld: \"\",\n            section199ADividends: \"\",\n            investmentExpenses: \"\",\n            foreignTaxPaid: \"\",\n            foreignCountry: \"\",\n            cashLiquidation: \"\",\n            noncashLiquidation: \"\",\n            stateCode: \"\",\n            stateTaxWithheld: \"\",\n            stateIdNumber: \"\"\n        };\n        this.extractGenericFormFields(document, data1099Div);\n        return data1099Div;\n    }\n    extract1099MiscData(document) {\n        const data1099Misc = {\n            payerName: \"\",\n            payerTIN: \"\",\n            payerAddress: \"\",\n            recipientName: \"\",\n            recipientTIN: \"\",\n            recipientAddress: \"\",\n            rents: \"\",\n            royalties: \"\",\n            otherIncome: \"\",\n            federalTaxWithheld: \"\",\n            fishingBoatProceeds: \"\",\n            medicalHealthPayments: \"\",\n            nonemployeeCompensation: \"\",\n            substitutePayments: \"\",\n            cropInsuranceProceeds: \"\",\n            grossProceeds: \"\",\n            section409ADeferrals: \"\",\n            section409AIncome: \"\",\n            excessGoldenParachute: \"\",\n            nonqualifiedDeferredCompensation: \"\",\n            stateCode: \"\",\n            stateTaxWithheld: \"\",\n            stateIdNumber: \"\"\n        };\n        this.extractGenericFormFields(document, data1099Misc);\n        return data1099Misc;\n    }\n    extract1099NecData(document) {\n        const data1099Nec = {\n            payerName: \"\",\n            payerTIN: \"\",\n            payerAddress: \"\",\n            recipientName: \"\",\n            recipientTIN: \"\",\n            recipientAddress: \"\",\n            nonemployeeCompensation: \"\",\n            federalTaxWithheld: \"\",\n            stateCode: \"\",\n            stateTaxWithheld: \"\",\n            stateIdNumber: \"\"\n        };\n        this.extractGenericFormFields(document, data1099Nec);\n        return data1099Nec;\n    }\n    extractGenericTaxData(document) {\n        const genericData = {\n            payerName: \"\",\n            payerTIN: \"\",\n            recipientName: \"\",\n            recipientTIN: \"\",\n            incomeAmount: \"\",\n            taxWithheld: \"\",\n            relevantBoxes: {}\n        };\n        this.extractGenericFormFields(document, genericData);\n        return genericData;\n    }\n    extractGenericFormFields(document, dataObject) {\n        if (document.pages && document.pages[0]?.formFields) {\n            document.pages[0].formFields.forEach((field)=>{\n                if (!field.fieldName?.textAnchor || !field.fieldValue?.textAnchor) return;\n                const fieldName = this.getText(field.fieldName.textAnchor, document.text);\n                const fieldValue = this.getText(field.fieldValue.textAnchor, document.text);\n                // Try to map common field names to data object properties\n                const normalizedFieldName = fieldName.toLowerCase().replace(/[^a-zA-Z0-9]/g, \"\");\n                // Look for matching property names in the data object\n                for (const [key, value] of Object.entries(dataObject)){\n                    const normalizedKey = key.toLowerCase().replace(/[^a-zA-Z0-9]/g, \"\");\n                    if (normalizedFieldName.includes(normalizedKey) || normalizedKey.includes(normalizedFieldName)) {\n                        dataObject[key] = fieldValue;\n                        break;\n                    }\n                }\n            });\n        }\n    }\n    getText(textAnchor, fullText) {\n        if (!textAnchor?.textSegments || textAnchor.textSegments.length === 0) {\n            return \"\";\n        }\n        const segment = textAnchor.textSegments[0];\n        const startIndex = segment.startIndex || 0;\n        const endIndex = segment.endIndex || fullText.length;\n        return fullText.substring(startIndex, endIndex).trim();\n    }\n    calculateAverageConfidence(document) {\n        let totalConfidence = 0;\n        let count = 0;\n        // Calculate from entities\n        if (document.entities) {\n            document.entities.forEach((entity)=>{\n                if (entity.confidence !== undefined) {\n                    totalConfidence += entity.confidence;\n                    count++;\n                }\n            });\n        }\n        // Calculate from form fields\n        if (document.pages) {\n            document.pages.forEach((page)=>{\n                if (page.formFields) {\n                    page.formFields.forEach((field)=>{\n                        if (field.fieldValue?.confidence !== undefined) {\n                            totalConfidence += field.fieldValue.confidence;\n                            count++;\n                        }\n                    });\n                }\n            });\n        }\n        return count > 0 ? totalConfidence / count : 0;\n    }\n}\n// Configuration helper\nfunction createDocumentAIConfig() {\n    const config = {\n        projectId: process.env.GOOGLE_CLOUD_PROJECT_ID || \"\",\n        location: process.env.GOOGLE_CLOUD_LOCATION || \"us\",\n        w2ProcessorId: process.env.GOOGLE_CLOUD_W2_PROCESSOR_ID || \"\",\n        form1099ProcessorId: process.env.GOOGLE_CLOUD_1099_PROCESSOR_ID || \"\"\n    };\n    if (!config.projectId || !config.w2ProcessorId) {\n        throw new Error(\"Missing required Google Cloud configuration. Please set GOOGLE_CLOUD_PROJECT_ID, GOOGLE_CLOUD_W2_PROCESSOR_ID environment variables.\");\n    }\n    return config;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/document-ai-service.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/jose","vendor-chunks/next-auth","vendor-chunks/openid-client","vendor-chunks/oauth","vendor-chunks/@babel","vendor-chunks/preact","vendor-chunks/yallist","vendor-chunks/preact-render-to-string","vendor-chunks/lru-cache","vendor-chunks/@panva","vendor-chunks/oidc-token-hash","vendor-chunks/@grpc","vendor-chunks/google-gax","vendor-chunks/protobufjs","vendor-chunks/google-auth-library","vendor-chunks/@google-cloud","vendor-chunks/readable-stream","vendor-chunks/proto3-json-serializer","vendor-chunks/@protobufjs","vendor-chunks/gaxios","vendor-chunks/jws","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/gcp-metadata","vendor-chunks/inherits","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/long","vendor-chunks/gtoken","vendor-chunks/wrappy","vendor-chunks/util-deprecate","vendor-chunks/string_decoder","vendor-chunks/stream-shift","vendor-chunks/safe-buffer","vendor-chunks/retry-request","vendor-chunks/once","vendor-chunks/object-hash","vendor-chunks/lodash.camelcase","vendor-chunks/jwa","vendor-chunks/extend","vendor-chunks/event-target-shim","vendor-chunks/end-of-stream","vendor-chunks/duplexify","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js","vendor-chunks/abort-controller","vendor-chunks/@js-sdsl"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&page=%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fdocuments%2F%5Bid%5D%2Fprocess%2Froute.ts&appDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5Ckiran%5Ctaxgrok%5Ctax_filing_app%5Capp&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();